using PlainElastic.Net.Utils;

namespace PlainElastic.Net.Queries
{
	/// <summary>
	/// A multi-value metrics aggregation that calculates one or more percentiles over numeric values extracted from the aggregated documents. 
	/// These values can be extracted either from specific numeric fields in the documents, or be generated by a provided script.
	/// see http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-aggregations-metrics-percentile-aggregation.html
	/// </summary>
	public class PercentilesAggregation<T> : ValueAggregationBase<PercentilesAggregation<T>, T>
	{

        /// <summary>
        /// Compression controls memory usage and approximation error.
        /// </summary>
        public PercentilesAggregation<T> Compression(int compression)
        {
            RegisterJsonPart("'compression': {0}", compression.AsString());
            return this;
        }

        /// <summary>
        /// Percents controls particular percentiles to calculate
        /// </summary>
        public PercentilesAggregation<T> Percents(params float[] percents)
        {
            RegisterJsonPart("'percents': [{0}]", string.Join(",", percents));
            return this;
        }



		protected override string ApplyAggregationBodyJsonTemplate(string body)
		{
			return "'percentiles': {{ {0} }}".AltQuoteF(body);
		}

	}
}