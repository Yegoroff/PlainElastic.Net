<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetReflector.Fakes</name>
    </assembly>
    <members>
        <member name="T:Exortech.NetReflector.Fakes.ShimDefaultSerialiserFactory">
            <summary>Shim type of Exortech.NetReflector.DefaultSerialiserFactory</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimDefaultSerialiserFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimDefaultSerialiserFactory.#ctor(Exortech.NetReflector.DefaultSerialiserFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimDefaultSerialiserFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimDefaultSerialiserFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimDefaultSerialiserFactory.Bind(Exortech.NetReflector.ISerialiserFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimDefaultSerialiserFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimDefaultSerialiserFactory.Constructor">
            <summary>Sets the shim of DefaultSerialiserFactory.DefaultSerialiserFactory()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimDefaultSerialiserFactory.CreateReflectorMemberReflectorPropertyAttribute">
            <summary>Sets the shim of DefaultSerialiserFactory.Create(ReflectorMember member, ReflectorPropertyAttribute attribute)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimDefaultSerialiserFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimDefaultSerialiserFactory.AllInstances.CreateReflectorMemberReflectorPropertyAttribute">
            <summary>Sets the shim of DefaultSerialiserFactory.Create(ReflectorMember member, ReflectorPropertyAttribute attribute)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimInvalidNodeEventArgs">
            <summary>Shim type of Exortech.NetReflector.InvalidNodeEventArgs</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimInvalidNodeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimInvalidNodeEventArgs.#ctor(Exortech.NetReflector.InvalidNodeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimInvalidNodeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimInvalidNodeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimInvalidNodeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimInvalidNodeEventArgs.ConstructorXmlNodeString">
            <summary>Sets the shim of InvalidNodeEventArgs.InvalidNodeEventArgs(XmlNode node, String message)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimInvalidNodeEventArgs.ToString">
            <summary>Sets the shim of InvalidNodeEventArgs.ToString()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimInvalidNodeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimInvalidNodeEventArgs.AllInstances.ToString01">
            <summary>Sets the shim of InvalidNodeEventArgs.ToString()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflector">
            <summary>Shim type of Exortech.NetReflector.NetReflector</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflector.#ctor(Exortech.NetReflector.NetReflector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.CheckNullObjectStringType">
            <summary>Sets the shim of NetReflector.CheckNull(Object obj, String param, Type expected)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.Constructor">
            <summary>Sets the shim of NetReflector.NetReflector()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadString">
            <summary>Sets the shim of NetReflector.Read(String xml)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadStringNetReflectorTypeTable">
            <summary>Sets the shim of NetReflector.Read(String xml, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadStringObject">
            <summary>Sets the shim of NetReflector.Read(String xml, Object instance)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadStringObjectNetReflectorTypeTable">
            <summary>Sets the shim of NetReflector.Read(String xml, Object instance, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadTextReader">
            <summary>Sets the shim of NetReflector.Read(TextReader reader)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadTextReaderNetReflectorTypeTable">
            <summary>Sets the shim of NetReflector.Read(TextReader reader, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadXmlNode">
            <summary>Sets the shim of NetReflector.Read(XmlNode node)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the shim of NetReflector.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadXmlNodeObject">
            <summary>Sets the shim of NetReflector.Read(XmlNode node, Object instance)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadXmlNodeObjectNetReflectorTypeTable">
            <summary>Sets the shim of NetReflector.Read(XmlNode node, Object instance, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadXmlReader">
            <summary>Sets the shim of NetReflector.Read(XmlReader reader)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadXmlReaderNetReflectorTypeTable">
            <summary>Sets the shim of NetReflector.Read(XmlReader reader, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadXmlReaderObject">
            <summary>Sets the shim of NetReflector.Read(XmlReader reader, Object instance)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.ReadXmlReaderObjectNetReflectorTypeTable">
            <summary>Sets the shim of NetReflector.Read(XmlReader reader, Object instance, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.WriteObject">
            <summary>Sets the shim of NetReflector.Write(Object target)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.WriteTextWriterObject">
            <summary>Sets the shim of NetReflector.Write(TextWriter writer, Object target)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflector.WriteXmlWriterObject">
            <summary>Sets the shim of NetReflector.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException">
            <summary>Shim type of Exortech.NetReflector.NetReflectorConverterException</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException.#ctor(Exortech.NetReflector.NetReflectorConverterException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException.Constructor">
            <summary>Sets the shim of NetReflectorConverterException.NetReflectorConverterException()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of NetReflectorConverterException.NetReflectorConverterException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException.ConstructorString">
            <summary>Sets the shim of NetReflectorConverterException.NetReflectorConverterException(String message)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException.ConstructorStringException">
            <summary>Sets the shim of NetReflectorConverterException.NetReflectorConverterException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorConverterException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorException">
            <summary>Shim type of Exortech.NetReflector.NetReflectorException</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorException.#ctor(Exortech.NetReflector.NetReflectorException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorException.Constructor">
            <summary>Sets the shim of NetReflectorException.NetReflectorException()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of NetReflectorException.NetReflectorException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorException.ConstructorString">
            <summary>Sets the shim of NetReflectorException.NetReflectorException(String message)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorException.ConstructorStringException">
            <summary>Sets the shim of NetReflectorException.NetReflectorException(String message, Exception ex)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException">
            <summary>Shim type of Exortech.NetReflector.NetReflectorItemRequiredException</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException.#ctor(Exortech.NetReflector.NetReflectorItemRequiredException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException.Constructor">
            <summary>Sets the shim of NetReflectorItemRequiredException.NetReflectorItemRequiredException()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of NetReflectorItemRequiredException.NetReflectorItemRequiredException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException.ConstructorString">
            <summary>Sets the shim of NetReflectorItemRequiredException.NetReflectorItemRequiredException(String message)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException.ConstructorStringException">
            <summary>Sets the shim of NetReflectorItemRequiredException.NetReflectorItemRequiredException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorItemRequiredException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorReader">
            <summary>Shim type of Exortech.NetReflector.NetReflectorReader</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorReader.#ctor(Exortech.NetReflector.NetReflectorReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.Constructor">
            <summary>Sets the shim of NetReflectorReader.NetReflectorReader()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.ConstructorNetReflectorTypeTable">
            <summary>Sets the shim of NetReflectorReader.NetReflectorReader(NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.ReadString">
            <summary>Sets the shim of NetReflectorReader.Read(String xml)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.ReadStringObject">
            <summary>Sets the shim of NetReflectorReader.Read(String xml, Object instance)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.ReadTextReader">
            <summary>Sets the shim of NetReflectorReader.Read(TextReader reader)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.ReadTextReaderObject">
            <summary>Sets the shim of NetReflectorReader.Read(TextReader reader, Object instance)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.ReadXmlNode">
            <summary>Sets the shim of NetReflectorReader.Read(XmlNode node)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.ReadXmlNodeObject">
            <summary>Sets the shim of NetReflectorReader.Read(XmlNode node, Object instance)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.ReadXmlReader">
            <summary>Sets the shim of NetReflectorReader.Read(XmlReader reader)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.ReadXmlReaderObject">
            <summary>Sets the shim of NetReflectorReader.Read(XmlReader reader, Object instance)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.AllInstances.ReadString">
            <summary>Sets the shim of NetReflectorReader.Read(String xml)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.AllInstances.ReadStringObject">
            <summary>Sets the shim of NetReflectorReader.Read(String xml, Object instance)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.AllInstances.ReadTextReader">
            <summary>Sets the shim of NetReflectorReader.Read(TextReader reader)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.AllInstances.ReadTextReaderObject">
            <summary>Sets the shim of NetReflectorReader.Read(TextReader reader, Object instance)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.AllInstances.ReadXmlNode">
            <summary>Sets the shim of NetReflectorReader.Read(XmlNode node)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.AllInstances.ReadXmlNodeObject">
            <summary>Sets the shim of NetReflectorReader.Read(XmlNode node, Object instance)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.AllInstances.ReadXmlReader">
            <summary>Sets the shim of NetReflectorReader.Read(XmlReader reader)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorReader.AllInstances.ReadXmlReaderObject">
            <summary>Sets the shim of NetReflectorReader.Read(XmlReader reader, Object instance)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException">
            <summary>Shim type of Exortech.NetReflector.NetReflectorTypeLoadException</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.#ctor(Exortech.NetReflector.NetReflectorTypeLoadException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.Constructor">
            <summary>Sets the shim of NetReflectorTypeLoadException.NetReflectorTypeLoadException()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.ConstructorAssemblyReflectionTypeLoadException">
            <summary>Sets the shim of NetReflectorTypeLoadException.NetReflectorTypeLoadException(Assembly loadedAssembly, ReflectionTypeLoadException ex)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of NetReflectorTypeLoadException.NetReflectorTypeLoadException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.ConstructorString">
            <summary>Sets the shim of NetReflectorTypeLoadException.NetReflectorTypeLoadException(String message)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.ConstructorStringException">
            <summary>Sets the shim of NetReflectorTypeLoadException.NetReflectorTypeLoadException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.CreateMessageAssemblyReflectionTypeLoadException">
            <summary>Sets the shim of NetReflectorTypeLoadException.CreateMessage(Assembly loadedAssembly, ReflectionTypeLoadException ex)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorTypeLoadException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable">
            <summary>Shim type of Exortech.NetReflector.NetReflectorTypeTable</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.#ctor(Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AddAppDomain">
            <summary>Sets the shim of NetReflectorTypeTable.Add(AppDomain appDomain)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AddAssembly">
            <summary>Sets the shim of NetReflectorTypeTable.Add(Assembly assembly)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AddString">
            <summary>Sets the shim of NetReflectorTypeTable.Add(String assemblyFilename)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AddStringString">
            <summary>Sets the shim of NetReflectorTypeTable.Add(String path, String searchPattern)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AddType">
            <summary>Sets the shim of NetReflectorTypeTable.Add(Type type)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.Constructor">
            <summary>Sets the shim of NetReflectorTypeTable.NetReflectorTypeTable()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.ConstructorIInstantiator">
            <summary>Sets the shim of NetReflectorTypeTable.NetReflectorTypeTable(IInstantiator instantiator)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.ContainsTypeString">
            <summary>Sets the shim of NetReflectorTypeTable.ContainsType(String reflectorName)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.CountGet">
            <summary>Sets the shim of NetReflectorTypeTable.get_Count()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.CreateDefault">
            <summary>Sets the shim of NetReflectorTypeTable.CreateDefault()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.CreateDefaultIInstantiator">
            <summary>Sets the shim of NetReflectorTypeTable.CreateDefault(IInstantiator instantiator)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.GetEnumerator">
            <summary>Sets the shim of NetReflectorTypeTable.GetEnumerator()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.GetTypesAssembly">
            <summary>Sets the shim of NetReflectorTypeTable.GetTypes(Assembly assembly)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.InvalidNodeAddInvalidNodeEventHandler">
            <summary>Sets the shim of NetReflectorTypeTable.add_InvalidNode(InvalidNodeEventHandler value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.InvalidNodeRemoveInvalidNodeEventHandler">
            <summary>Sets the shim of NetReflectorTypeTable.remove_InvalidNode(InvalidNodeEventHandler value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.ItemGetString">
            <summary>Sets the shim of NetReflectorTypeTable.get_Item(String reflectorName)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.NullHandlerInvalidNodeEventArgs">
            <summary>Sets the shim of NetReflectorTypeTable.NullHandler(InvalidNodeEventArgs args)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.OnInvalidNodeInvalidNodeEventArgs">
            <summary>Sets the shim of NetReflectorTypeTable.OnInvalidNode(InvalidNodeEventArgs args)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.SetupDefaultTableNetReflectorTypeTable">
            <summary>Sets the shim of NetReflectorTypeTable.SetupDefaultTable(NetReflectorTypeTable table)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.AddAppDomain">
            <summary>Sets the shim of NetReflectorTypeTable.Add(AppDomain appDomain)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.AddAssembly">
            <summary>Sets the shim of NetReflectorTypeTable.Add(Assembly assembly)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.AddString">
            <summary>Sets the shim of NetReflectorTypeTable.Add(String assemblyFilename)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.AddStringString">
            <summary>Sets the shim of NetReflectorTypeTable.Add(String path, String searchPattern)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.AddType">
            <summary>Sets the shim of NetReflectorTypeTable.Add(Type type)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.ContainsTypeString">
            <summary>Sets the shim of NetReflectorTypeTable.ContainsType(String reflectorName)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.CountGet">
            <summary>Sets the shim of NetReflectorTypeTable.get_Count()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.GetEnumerator">
            <summary>Sets the shim of NetReflectorTypeTable.GetEnumerator()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.GetTypesAssembly">
            <summary>Sets the shim of NetReflectorTypeTable.GetTypes(Assembly assembly)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.InvalidNodeAddInvalidNodeEventHandler">
            <summary>Sets the shim of NetReflectorTypeTable.add_InvalidNode(InvalidNodeEventHandler value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.InvalidNodeRemoveInvalidNodeEventHandler">
            <summary>Sets the shim of NetReflectorTypeTable.remove_InvalidNode(InvalidNodeEventHandler value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.ItemGetString">
            <summary>Sets the shim of NetReflectorTypeTable.get_Item(String reflectorName)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.NullHandlerInvalidNodeEventArgs">
            <summary>Sets the shim of NetReflectorTypeTable.NullHandler(InvalidNodeEventArgs args)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorTypeTable.AllInstances.OnInvalidNodeInvalidNodeEventArgs">
            <summary>Sets the shim of NetReflectorTypeTable.OnInvalidNode(InvalidNodeEventArgs args)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorWriter">
            <summary>Shim type of Exortech.NetReflector.NetReflectorWriter</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorWriter.#ctor(Exortech.NetReflector.NetReflectorWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimNetReflectorWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorWriter.ConstructorTextWriter">
            <summary>Sets the shim of NetReflectorWriter.NetReflectorWriter(TextWriter writer)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorWriter.ConstructorXmlWriter">
            <summary>Sets the shim of NetReflectorWriter.NetReflectorWriter(XmlWriter writer)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorWriter.WriteObject">
            <summary>Sets the shim of NetReflectorWriter.Write(Object target)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimNetReflectorWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimNetReflectorWriter.AllInstances.WriteObject">
            <summary>Sets the shim of NetReflectorWriter.Write(Object target)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectionPreprocessorAttribute">
            <summary>Shim type of Exortech.NetReflector.ReflectionPreprocessorAttribute</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectionPreprocessorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectionPreprocessorAttribute.#ctor(Exortech.NetReflector.ReflectionPreprocessorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectionPreprocessorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectionPreprocessorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectionPreprocessorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectionPreprocessorAttribute.Constructor">
            <summary>Sets the shim of ReflectionPreprocessorAttribute.ReflectionPreprocessorAttribute()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectionPreprocessorAttribute.InvokeObjectNetReflectorTypeTableXmlNode">
            <summary>Sets the shim of ReflectionPreprocessorAttribute.Invoke(Object parent, NetReflectorTypeTable typeTable, XmlNode inputNode)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectionPreprocessorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectorArrayAttribute">
            <summary>Shim type of Exortech.NetReflector.ReflectorArrayAttribute</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorArrayAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorArrayAttribute.#ctor(Exortech.NetReflector.ReflectorArrayAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorArrayAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorArrayAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorArrayAttribute.Bind(Exortech.NetReflector.IReflectorAttribute)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorArrayAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorArrayAttribute.ConstructorString">
            <summary>Sets the shim of ReflectorArrayAttribute.ReflectorArrayAttribute(String name)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectorArrayAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectorCollectionAttribute">
            <summary>Shim type of Exortech.NetReflector.ReflectorCollectionAttribute</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorCollectionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorCollectionAttribute.#ctor(Exortech.NetReflector.ReflectorCollectionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorCollectionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorCollectionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorCollectionAttribute.Bind(Exortech.NetReflector.IReflectorAttribute)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorCollectionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorCollectionAttribute.ConstructorString">
            <summary>Sets the shim of ReflectorCollectionAttribute.ReflectorCollectionAttribute(String name)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectorCollectionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute">
            <summary>Shim type of Exortech.NetReflector.ReflectorHashAttribute</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.#ctor(Exortech.NetReflector.ReflectorHashAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.Bind(Exortech.NetReflector.IReflectorAttribute)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.ConstructorString">
            <summary>Sets the shim of ReflectorHashAttribute.ReflectorHashAttribute(String name)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.ConstructorStringString">
            <summary>Sets the shim of ReflectorHashAttribute.ReflectorHashAttribute(String name, String key)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.CreateSerialiserReflectorMember">
            <summary>Sets the shim of ReflectorHashAttribute.CreateSerialiser(ReflectorMember member)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.KeyGet">
            <summary>Sets the shim of ReflectorHashAttribute.get_Key()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.KeySetString">
            <summary>Sets the shim of ReflectorHashAttribute.set_Key(String value)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.AllInstances.CreateSerialiserReflectorMember">
            <summary>Sets the shim of ReflectorHashAttribute.CreateSerialiser(ReflectorMember member)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.AllInstances.KeyGet">
            <summary>Sets the shim of ReflectorHashAttribute.get_Key()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorHashAttribute.AllInstances.KeySetString">
            <summary>Sets the shim of ReflectorHashAttribute.set_Key(String value)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute">
            <summary>Shim type of Exortech.NetReflector.ReflectorPropertyAttribute</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.#ctor(Exortech.NetReflector.ReflectorPropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.Bind(Exortech.NetReflector.IReflectorAttribute)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.ConstructorString">
            <summary>Sets the shim of ReflectorPropertyAttribute.ReflectorPropertyAttribute(String name)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.ConstructorStringType">
            <summary>Sets the shim of ReflectorPropertyAttribute.ReflectorPropertyAttribute(String name, Type factoryType)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.CreateSerialiserReflectorMember">
            <summary>Sets the shim of ReflectorPropertyAttribute.CreateSerialiser(ReflectorMember member)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.DescriptionGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_Description()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.DescriptionSetString">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.GetAttributeMemberInfo">
            <summary>Sets the shim of ReflectorPropertyAttribute.GetAttribute(MemberInfo member)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.HasCustomFactoryGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_HasCustomFactory()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.HasCustomFactorySetBoolean">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_HasCustomFactory(Boolean value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.InstanceTypeGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_InstanceType()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.InstanceTypeKeyGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_InstanceTypeKey()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.InstanceTypeKeySetString">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_InstanceTypeKey(String value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.InstanceTypeSetType">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_InstanceType(Type value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.NameGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_Name()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.NameSetString">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.RequiredGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_Required()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.RequiredSetBoolean">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_Required(Boolean value)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.CreateSerialiserReflectorMember">
            <summary>Sets the shim of ReflectorPropertyAttribute.CreateSerialiser(ReflectorMember member)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_Description()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.DescriptionSetString">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.HasCustomFactoryGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_HasCustomFactory()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.HasCustomFactorySetBoolean">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_HasCustomFactory(Boolean value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.InstanceTypeGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_InstanceType()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.InstanceTypeKeyGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_InstanceTypeKey()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.InstanceTypeKeySetString">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_InstanceTypeKey(String value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.InstanceTypeSetType">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_InstanceType(Type value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.NameGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_Name()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.RequiredGet">
            <summary>Sets the shim of ReflectorPropertyAttribute.get_Required()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorPropertyAttribute.AllInstances.RequiredSetBoolean">
            <summary>Sets the shim of ReflectorPropertyAttribute.set_Required(Boolean value)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute">
            <summary>Shim type of Exortech.NetReflector.ReflectorTypeAttribute</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.#ctor(Exortech.NetReflector.ReflectorTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.Bind(Exortech.NetReflector.IReflectorAttribute)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.ConstructorString">
            <summary>Sets the shim of ReflectorTypeAttribute.ReflectorTypeAttribute(String name)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.CreateSerialiserType">
            <summary>Sets the shim of ReflectorTypeAttribute.CreateSerialiser(Type type)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.CreateSerialiserTypeIInstantiator">
            <summary>Sets the shim of ReflectorTypeAttribute.CreateSerialiser(Type type, IInstantiator instantiator)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.DescriptionGet">
            <summary>Sets the shim of ReflectorTypeAttribute.get_Description()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.DescriptionSetString">
            <summary>Sets the shim of ReflectorTypeAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.ExtendsGet">
            <summary>Sets the shim of ReflectorTypeAttribute.get_Extends()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.ExtendsSetType">
            <summary>Sets the shim of ReflectorTypeAttribute.set_Extends(Type value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.GetAttributeObject">
            <summary>Sets the shim of ReflectorTypeAttribute.GetAttribute(Object target)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.GetAttributeType">
            <summary>Sets the shim of ReflectorTypeAttribute.GetAttribute(Type type)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.HasCustomFactoryGet">
            <summary>Sets the shim of ReflectorTypeAttribute.get_HasCustomFactory()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.NameGet">
            <summary>Sets the shim of ReflectorTypeAttribute.get_Name()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.NameSetString">
            <summary>Sets the shim of ReflectorTypeAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.WriteXmlWriterObject">
            <summary>Sets the shim of ReflectorTypeAttribute.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.AllInstances.CreateSerialiserType">
            <summary>Sets the shim of ReflectorTypeAttribute.CreateSerialiser(Type type)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.AllInstances.CreateSerialiserTypeIInstantiator">
            <summary>Sets the shim of ReflectorTypeAttribute.CreateSerialiser(Type type, IInstantiator instantiator)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of ReflectorTypeAttribute.get_Description()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.AllInstances.DescriptionSetString">
            <summary>Sets the shim of ReflectorTypeAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.AllInstances.ExtendsGet">
            <summary>Sets the shim of ReflectorTypeAttribute.get_Extends()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.AllInstances.ExtendsSetType">
            <summary>Sets the shim of ReflectorTypeAttribute.set_Extends(Type value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.AllInstances.HasCustomFactoryGet">
            <summary>Sets the shim of ReflectorTypeAttribute.get_HasCustomFactory()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.AllInstances.NameGet">
            <summary>Sets the shim of ReflectorTypeAttribute.get_Name()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of ReflectorTypeAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimReflectorTypeAttribute.AllInstances.WriteXmlWriterObject">
            <summary>Sets the shim of ReflectorTypeAttribute.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser">
            <summary>Shim type of Exortech.NetReflector.XmlArraySerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser.#ctor(Exortech.NetReflector.XmlArraySerialiser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser.Bind(Exortech.NetReflector.IXmlMemberSerialiser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser.Bind(Exortech.NetReflector.IXmlSerialiser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser.ConstructorReflectorMemberReflectorPropertyAttribute">
            <summary>Sets the shim of XmlArraySerialiser.XmlArraySerialiser(ReflectorMember member, ReflectorPropertyAttribute attribute)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the shim of XmlArraySerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlArraySerialiser.AllInstances.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the shim of XmlArraySerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser">
            <summary>Shim type of Exortech.NetReflector.XmlCollectionSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.#ctor(Exortech.NetReflector.XmlCollectionSerialiser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.Bind(Exortech.NetReflector.IXmlMemberSerialiser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.Bind(Exortech.NetReflector.IXmlSerialiser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.ConstructorReflectorMemberReflectorPropertyAttribute">
            <summary>Sets the shim of XmlCollectionSerialiser.XmlCollectionSerialiser(ReflectorMember member, ReflectorPropertyAttribute attribute)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the shim of XmlCollectionSerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.StaticConstructor">
            <summary>Sets the shim of XmlCollectionSerialiser.XmlCollectionSerialiser()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.WriteValueXmlWriterObject">
            <summary>Sets the shim of XmlCollectionSerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.AllInstances.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the shim of XmlCollectionSerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlCollectionSerialiser.AllInstances.WriteValueXmlWriterObject">
            <summary>Sets the shim of XmlCollectionSerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser">
            <summary>Shim type of Exortech.NetReflector.XmlDictionarySerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.#ctor(Exortech.NetReflector.XmlDictionarySerialiser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.Bind(Exortech.NetReflector.IXmlMemberSerialiser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.Bind(Exortech.NetReflector.IXmlSerialiser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.ConstructorReflectorMemberReflectorHashAttribute">
            <summary>Sets the shim of XmlDictionarySerialiser.XmlDictionarySerialiser(ReflectorMember member, ReflectorHashAttribute attribute)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.GetHashkeyXmlNode">
            <summary>Sets the shim of XmlDictionarySerialiser.GetHashkey(XmlNode node)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the shim of XmlDictionarySerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.WriteValueXmlWriterObject">
            <summary>Sets the shim of XmlDictionarySerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.AllInstances.GetHashkeyXmlNode">
            <summary>Sets the shim of XmlDictionarySerialiser.GetHashkey(XmlNode node)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.AllInstances.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the shim of XmlDictionarySerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlDictionarySerialiser.AllInstances.WriteValueXmlWriterObject">
            <summary>Sets the shim of XmlDictionarySerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser">
            <summary>Shim type of Exortech.NetReflector.XmlMemberSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.#ctor(Exortech.NetReflector.XmlMemberSerialiser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.Bind(Exortech.NetReflector.IXmlMemberSerialiser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.Bind(Exortech.NetReflector.IXmlSerialiser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AttributeGet">
            <summary>Sets the shim of XmlMemberSerialiser.get_Attribute()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.CheckIfMemberIsRequired">
            <summary>Sets the shim of XmlMemberSerialiser.CheckIfMemberIsRequired()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.ConstructorReflectorMemberReflectorPropertyAttribute">
            <summary>Sets the shim of XmlMemberSerialiser.XmlMemberSerialiser(ReflectorMember member, ReflectorPropertyAttribute attribute)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.GetTargetTypeXmlNodeNetReflectorTypeTable">
            <summary>Sets the shim of XmlMemberSerialiser.GetTargetType(XmlNode childNode, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.InstantiatorGet">
            <summary>Sets the shim of XmlMemberSerialiser.get_Instantiator()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.IsSerializableValueObject">
            <summary>Sets the shim of XmlMemberSerialiser.IsSerializableValue(Object value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.ReadValueXmlNodeNetReflectorTypeTable">
            <summary>Sets the shim of XmlMemberSerialiser.ReadValue(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the shim of XmlMemberSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the shim of XmlMemberSerialiser.Read(XmlNode childNode, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.ReflectorMemberGet">
            <summary>Sets the shim of XmlMemberSerialiser.get_ReflectorMember()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.SetValueObjectObject">
            <summary>Sets the shim of XmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.WriteValueXmlWriterObject">
            <summary>Sets the shim of XmlMemberSerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.WriteXmlWriterObject">
            <summary>Sets the shim of XmlMemberSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.AttributeGet">
            <summary>Sets the shim of XmlMemberSerialiser.get_Attribute()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.CheckIfMemberIsRequired">
            <summary>Sets the shim of XmlMemberSerialiser.CheckIfMemberIsRequired()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.GetTargetTypeXmlNodeNetReflectorTypeTable">
            <summary>Sets the shim of XmlMemberSerialiser.GetTargetType(XmlNode childNode, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.InstantiatorGet">
            <summary>Sets the shim of XmlMemberSerialiser.get_Instantiator()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.IsSerializableValueObject">
            <summary>Sets the shim of XmlMemberSerialiser.IsSerializableValue(Object value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.ReadValueXmlNodeNetReflectorTypeTable">
            <summary>Sets the shim of XmlMemberSerialiser.ReadValue(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the shim of XmlMemberSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the shim of XmlMemberSerialiser.Read(XmlNode childNode, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.ReflectorMemberGet">
            <summary>Sets the shim of XmlMemberSerialiser.get_ReflectorMember()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.SetValueObjectObject">
            <summary>Sets the shim of XmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.WriteValueXmlWriterObject">
            <summary>Sets the shim of XmlMemberSerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlMemberSerialiser.AllInstances.WriteXmlWriterObject">
            <summary>Sets the shim of XmlMemberSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser">
            <summary>Shim type of Exortech.NetReflector.XmlTypeSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.#ctor(Exortech.NetReflector.XmlTypeSerialiser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.Bind(Exortech.NetReflector.IXmlSerialiser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.Bind(Exortech.NetReflector.IXmlTypeSerialiser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AddChildNodesIEnumerableIListNetReflectorTypeTable">
            <summary>Sets the shim of XmlTypeSerialiser.AddChildNodes(IEnumerable nodes, IList childNodes, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AttributeGet">
            <summary>Sets the shim of XmlTypeSerialiser.get_Attribute()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.ConstructorTypeReflectorTypeAttribute">
            <summary>Sets the shim of XmlTypeSerialiser.XmlTypeSerialiser(Type type, ReflectorTypeAttribute attribute)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.ConstructorTypeReflectorTypeAttributeIInstantiator">
            <summary>Sets the shim of XmlTypeSerialiser.XmlTypeSerialiser(Type type, ReflectorTypeAttribute attribute, IInstantiator instantiator)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.GetNodeByNameIListString">
            <summary>Sets the shim of XmlTypeSerialiser.GetNodeByName(IList nodes, String name)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.HandleUnusedNodeNetReflectorTypeTableXmlNode">
            <summary>Sets the shim of XmlTypeSerialiser.HandleUnusedNode(NetReflectorTypeTable table, XmlNode orphan)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.InitialiseMemberSerialisers">
            <summary>Sets the shim of XmlTypeSerialiser.InitialiseMemberSerialisers()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.InstantiatorGet">
            <summary>Sets the shim of XmlTypeSerialiser.get_Instantiator()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.MemberSerialisersGet">
            <summary>Sets the shim of XmlTypeSerialiser.get_MemberSerialisers()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.ReadMembersXmlNodeObjectNetReflectorTypeTable">
            <summary>Sets the shim of XmlTypeSerialiser.ReadMembers(XmlNode node, Object instance, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the shim of XmlTypeSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.TypeGet">
            <summary>Sets the shim of XmlTypeSerialiser.get_Type()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.WriteMembersXmlWriterObject">
            <summary>Sets the shim of XmlTypeSerialiser.WriteMembers(XmlWriter writer, Object target)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.WriteXmlWriterObject">
            <summary>Sets the shim of XmlTypeSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.AddChildNodesIEnumerableIListNetReflectorTypeTable">
            <summary>Sets the shim of XmlTypeSerialiser.AddChildNodes(IEnumerable nodes, IList childNodes, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.AttributeGet">
            <summary>Sets the shim of XmlTypeSerialiser.get_Attribute()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.GetNodeByNameIListString">
            <summary>Sets the shim of XmlTypeSerialiser.GetNodeByName(IList nodes, String name)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.HandleUnusedNodeNetReflectorTypeTableXmlNode">
            <summary>Sets the shim of XmlTypeSerialiser.HandleUnusedNode(NetReflectorTypeTable table, XmlNode orphan)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.InitialiseMemberSerialisers">
            <summary>Sets the shim of XmlTypeSerialiser.InitialiseMemberSerialisers()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.InstantiatorGet">
            <summary>Sets the shim of XmlTypeSerialiser.get_Instantiator()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.MemberSerialisersGet">
            <summary>Sets the shim of XmlTypeSerialiser.get_MemberSerialisers()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.ReadMembersXmlNodeObjectNetReflectorTypeTable">
            <summary>Sets the shim of XmlTypeSerialiser.ReadMembers(XmlNode node, Object instance, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the shim of XmlTypeSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.TypeGet">
            <summary>Sets the shim of XmlTypeSerialiser.get_Type()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.WriteMembersXmlWriterObject">
            <summary>Sets the shim of XmlTypeSerialiser.WriteMembers(XmlWriter writer, Object target)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.ShimXmlTypeSerialiser.AllInstances.WriteXmlWriterObject">
            <summary>Sets the shim of XmlTypeSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubDefaultSerialiserFactory">
            <summary>Stub type of Exortech.NetReflector.DefaultSerialiserFactory</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubDefaultSerialiserFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubDefaultSerialiserFactory.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultSerialiserFactory</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubDefaultSerialiserFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubDefaultSerialiserFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubDefaultSerialiserFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubIReflectorAttribute">
            <summary>Stub type of Exortech.NetReflector.IReflectorAttribute</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubIReflectorAttribute.#ctor">
            <summary>Initializes a new instance of type StubIReflectorAttribute</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIReflectorAttribute.DescriptionGet">
            <summary>Sets the stub of IReflectorAttribute.get_Description()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIReflectorAttribute.HasCustomFactoryGet">
            <summary>Sets the stub of IReflectorAttribute.get_HasCustomFactory()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIReflectorAttribute.NameGet">
            <summary>Sets the stub of IReflectorAttribute.get_Name()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubIReflectorAttribute.nr::Exortech#NetReflector#IReflectorAttribute#Description">
            <summary>Sets the stub of IReflectorAttribute.get_Description()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubIReflectorAttribute.nr::Exortech#NetReflector#IReflectorAttribute#HasCustomFactory">
            <summary>Sets the stub of IReflectorAttribute.get_HasCustomFactory()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubIReflectorAttribute.nr::Exortech#NetReflector#IReflectorAttribute#Name">
            <summary>Sets the stub of IReflectorAttribute.get_Name()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubISerialiserFactory">
            <summary>Stub type of Exortech.NetReflector.ISerialiserFactory</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubISerialiserFactory.#ctor">
            <summary>Initializes a new instance of type StubISerialiserFactory</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubISerialiserFactory.CreateReflectorMemberReflectorPropertyAttribute">
            <summary>Sets the stub of ISerialiserFactory.Create(ReflectorMember memberInfo, ReflectorPropertyAttribute attribute)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubISerialiserFactory.nr::Exortech#NetReflector#ISerialiserFactory#Create(Exortech.NetReflector.Util.ReflectorMember,Exortech.NetReflector.ReflectorPropertyAttribute)">
            <summary>Sets the stub of ISerialiserFactory.Create(ReflectorMember memberInfo, ReflectorPropertyAttribute attribute)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser">
            <summary>Stub type of Exortech.NetReflector.IXmlMemberSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser.#ctor">
            <summary>Initializes a new instance of type StubIXmlMemberSerialiser</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser.AttributeGet">
            <summary>Sets the stub of IXmlMemberSerialiser.get_Attribute()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser.nr::Exortech#NetReflector#IXmlMemberSerialiser#SetValue(System.Object,System.Object)">
            <summary>Sets the stub of IXmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser.nr::Exortech#NetReflector#IXmlSerialiser#Read(System.Xml.XmlNode,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Sets the stub of IXmlSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser.nr::Exortech#NetReflector#IXmlSerialiser#Write(System.Xml.XmlWriter,System.Object)">
            <summary>Sets the stub of IXmlSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the stub of IXmlSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser.ReflectorMemberGet">
            <summary>Sets the stub of IXmlMemberSerialiser.get_ReflectorMember()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser.SetValueObjectObject">
            <summary>Sets the stub of IXmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser.WriteXmlWriterObject">
            <summary>Sets the stub of IXmlSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser.nr::Exortech#NetReflector#IXmlMemberSerialiser#Attribute">
            <summary>Sets the stub of IXmlMemberSerialiser.get_Attribute()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubIXmlMemberSerialiser.nr::Exortech#NetReflector#IXmlMemberSerialiser#ReflectorMember">
            <summary>Sets the stub of IXmlMemberSerialiser.get_ReflectorMember()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubIXmlSerialiser">
            <summary>Stub type of Exortech.NetReflector.IXmlSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubIXmlSerialiser.#ctor">
            <summary>Initializes a new instance of type StubIXmlSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubIXmlSerialiser.nr::Exortech#NetReflector#IXmlSerialiser#Read(System.Xml.XmlNode,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Sets the stub of IXmlSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubIXmlSerialiser.nr::Exortech#NetReflector#IXmlSerialiser#Write(System.Xml.XmlWriter,System.Object)">
            <summary>Sets the stub of IXmlSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlSerialiser.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the stub of IXmlSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlSerialiser.WriteXmlWriterObject">
            <summary>Sets the stub of IXmlSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser">
            <summary>Stub type of Exortech.NetReflector.IXmlTypeSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser.#ctor">
            <summary>Initializes a new instance of type StubIXmlTypeSerialiser</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser.AttributeGet">
            <summary>Sets the stub of IXmlTypeSerialiser.get_Attribute()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser.nr::Exortech#NetReflector#IXmlSerialiser#Read(System.Xml.XmlNode,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Sets the stub of IXmlSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser.nr::Exortech#NetReflector#IXmlSerialiser#Write(System.Xml.XmlWriter,System.Object)">
            <summary>Sets the stub of IXmlSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser.MemberSerialisersGet">
            <summary>Sets the stub of IXmlTypeSerialiser.get_MemberSerialisers()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the stub of IXmlSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser.TypeGet">
            <summary>Sets the stub of IXmlTypeSerialiser.get_Type()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser.WriteXmlWriterObject">
            <summary>Sets the stub of IXmlSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser.nr::Exortech#NetReflector#IXmlTypeSerialiser#Attribute">
            <summary>Sets the stub of IXmlTypeSerialiser.get_Attribute()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser.nr::Exortech#NetReflector#IXmlTypeSerialiser#MemberSerialisers">
            <summary>Sets the stub of IXmlTypeSerialiser.get_MemberSerialisers()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubIXmlTypeSerialiser.nr::Exortech#NetReflector#IXmlTypeSerialiser#Type">
            <summary>Sets the stub of IXmlTypeSerialiser.get_Type()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubInvalidNodeEventArgs">
            <summary>Stub type of Exortech.NetReflector.InvalidNodeEventArgs</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubInvalidNodeEventArgs.#ctor(System.Xml.XmlNode,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubInvalidNodeEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubInvalidNodeEventArgs</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubInvalidNodeEventArgs.ToString">
            <summary>Sets the stub of InvalidNodeEventArgs.ToString()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubInvalidNodeEventArgs.ToString01">
            <summary>Sets the stub of InvalidNodeEventArgs.ToString()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubInvalidNodeEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubInvalidNodeEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubInvalidNodeEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubNetReflector">
            <summary>Stub type of Exortech.NetReflector.NetReflector</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflector.InitializeStub">
            <summary>Initializes a new instance of type StubNetReflector</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubNetReflectorConverterException">
            <summary>Stub type of Exortech.NetReflector.NetReflectorConverterException</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNetReflectorConverterException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNetReflectorConverterException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.InitializeStub">
            <summary>Initializes a new instance of type StubNetReflectorConverterException</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorConverterException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubNetReflectorException">
            <summary>Stub type of Exortech.NetReflector.NetReflectorException</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNetReflectorException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNetReflectorException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorException.InitializeStub">
            <summary>Initializes a new instance of type StubNetReflectorException</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException">
            <summary>Stub type of Exortech.NetReflector.NetReflectorItemRequiredException</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNetReflectorItemRequiredException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNetReflectorItemRequiredException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.InitializeStub">
            <summary>Initializes a new instance of type StubNetReflectorItemRequiredException</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorItemRequiredException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubNetReflectorReader">
            <summary>Stub type of Exortech.NetReflector.NetReflectorReader</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorReader.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorReader.#ctor(Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorReader.InitializeStub">
            <summary>Initializes a new instance of type StubNetReflectorReader</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException">
            <summary>Stub type of Exortech.NetReflector.NetReflectorTypeLoadException</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionTypeLoadException)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNetReflectorTypeLoadException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNetReflectorTypeLoadException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.InitializeStub">
            <summary>Initializes a new instance of type StubNetReflectorTypeLoadException</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorTypeLoadException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubNetReflectorTypeTable">
            <summary>Stub type of Exortech.NetReflector.NetReflectorTypeTable</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeTable.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeTable.#ctor(Exortech.NetReflector.Util.IInstantiator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorTypeTable.InitializeStub">
            <summary>Initializes a new instance of type StubNetReflectorTypeTable</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorTypeTable.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorTypeTable.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorTypeTable.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubNetReflectorWriter">
            <summary>Stub type of Exortech.NetReflector.NetReflectorWriter</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorWriter.#ctor(System.Xml.XmlWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorWriter.#ctor(System.IO.TextWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubNetReflectorWriter.InitializeStub">
            <summary>Initializes a new instance of type StubNetReflectorWriter</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubNetReflectorWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute">
            <summary>Stub type of Exortech.NetReflector.ReflectionPreprocessorAttribute</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubReflectionPreprocessorAttribute</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubReflectionPreprocessorAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute">
            <summary>Stub type of Exortech.NetReflector.ReflectorPropertyAttribute</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.#ctor(System.String,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.CreateSerialiser(Exortech.NetReflector.Util.ReflectorMember)">
            <summary>Sets the stub of ReflectorPropertyAttribute.CreateSerialiser(ReflectorMember member)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.CreateSerialiserReflectorMember">
            <summary>Sets the stub of ReflectorPropertyAttribute.CreateSerialiser(ReflectorMember member)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubReflectorPropertyAttribute</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubReflectorPropertyAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubXmlArraySerialiser">
            <summary>Stub type of Exortech.NetReflector.XmlArraySerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.#ctor(Exortech.NetReflector.Util.ReflectorMember,Exortech.NetReflector.ReflectorPropertyAttribute)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.InitializeStub">
            <summary>Initializes a new instance of type StubXmlArraySerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.Read(System.Xml.XmlNode,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Sets the stub of XmlMemberSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.Read(System.Xml.XmlNode,System.Type,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Sets the stub of XmlArraySerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the stub of XmlMemberSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the stub of XmlArraySerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.SetValue(System.Object,System.Object)">
            <summary>Sets the stub of XmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.SetValueObjectObject">
            <summary>Sets the stub of XmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.Write(System.Xml.XmlWriter,System.Object)">
            <summary>Sets the stub of XmlMemberSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.WriteValue(System.Xml.XmlWriter,System.Object)">
            <summary>Sets the stub of XmlCollectionSerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.WriteValueXmlWriterObject">
            <summary>Sets the stub of XmlCollectionSerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.WriteXmlWriterObject">
            <summary>Sets the stub of XmlMemberSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlArraySerialiser.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser">
            <summary>Stub type of Exortech.NetReflector.XmlCollectionSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.#ctor(Exortech.NetReflector.Util.ReflectorMember,Exortech.NetReflector.ReflectorPropertyAttribute)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.InitializeStub">
            <summary>Initializes a new instance of type StubXmlCollectionSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.Read(System.Xml.XmlNode,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Sets the stub of XmlMemberSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.Read(System.Xml.XmlNode,System.Type,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Sets the stub of XmlCollectionSerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the stub of XmlMemberSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the stub of XmlCollectionSerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.SetValue(System.Object,System.Object)">
            <summary>Sets the stub of XmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.SetValueObjectObject">
            <summary>Sets the stub of XmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.Write(System.Xml.XmlWriter,System.Object)">
            <summary>Sets the stub of XmlMemberSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.WriteValue(System.Xml.XmlWriter,System.Object)">
            <summary>Sets the stub of XmlCollectionSerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.WriteValueXmlWriterObject">
            <summary>Sets the stub of XmlCollectionSerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.WriteXmlWriterObject">
            <summary>Sets the stub of XmlMemberSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlCollectionSerialiser.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser">
            <summary>Stub type of Exortech.NetReflector.XmlDictionarySerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.#ctor(Exortech.NetReflector.Util.ReflectorMember,Exortech.NetReflector.ReflectorHashAttribute)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.InitializeStub">
            <summary>Initializes a new instance of type StubXmlDictionarySerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.Read(System.Xml.XmlNode,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Sets the stub of XmlMemberSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.Read(System.Xml.XmlNode,System.Type,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Sets the stub of XmlDictionarySerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the stub of XmlMemberSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the stub of XmlDictionarySerialiser.Read(XmlNode node, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.SetValue(System.Object,System.Object)">
            <summary>Sets the stub of XmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.SetValueObjectObject">
            <summary>Sets the stub of XmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.Write(System.Xml.XmlWriter,System.Object)">
            <summary>Sets the stub of XmlMemberSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.WriteValue(System.Xml.XmlWriter,System.Object)">
            <summary>Sets the stub of XmlDictionarySerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.WriteValueXmlWriterObject">
            <summary>Sets the stub of XmlDictionarySerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.WriteXmlWriterObject">
            <summary>Sets the stub of XmlMemberSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlDictionarySerialiser.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser">
            <summary>Stub type of Exortech.NetReflector.XmlMemberSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.#ctor(Exortech.NetReflector.Util.ReflectorMember,Exortech.NetReflector.ReflectorPropertyAttribute)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.InitializeStub">
            <summary>Initializes a new instance of type StubXmlMemberSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.Read(System.Xml.XmlNode,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Sets the stub of XmlMemberSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.Read(System.Xml.XmlNode,System.Type,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Sets the stub of XmlMemberSerialiser.Read(XmlNode childNode, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.ReadXmlNodeNetReflectorTypeTable">
            <summary>Sets the stub of XmlMemberSerialiser.Read(XmlNode node, NetReflectorTypeTable table)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.ReadXmlNodeTypeNetReflectorTypeTable">
            <summary>Sets the stub of XmlMemberSerialiser.Read(XmlNode childNode, Type instanceType, NetReflectorTypeTable table)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.SetValue(System.Object,System.Object)">
            <summary>Sets the stub of XmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.SetValueObjectObject">
            <summary>Sets the stub of XmlMemberSerialiser.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.Write(System.Xml.XmlWriter,System.Object)">
            <summary>Sets the stub of XmlMemberSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.WriteValue(System.Xml.XmlWriter,System.Object)">
            <summary>Sets the stub of XmlMemberSerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.WriteValueXmlWriterObject">
            <summary>Sets the stub of XmlMemberSerialiser.WriteValue(XmlWriter writer, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.WriteXmlWriterObject">
            <summary>Sets the stub of XmlMemberSerialiser.Write(XmlWriter writer, Object target)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlMemberSerialiser.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Fakes.StubXmlTypeSerialiser">
            <summary>Stub type of Exortech.NetReflector.XmlTypeSerialiser</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlTypeSerialiser.#ctor(System.Type,Exortech.NetReflector.ReflectorTypeAttribute)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlTypeSerialiser.#ctor(System.Type,Exortech.NetReflector.ReflectorTypeAttribute,Exortech.NetReflector.Util.IInstantiator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Fakes.StubXmlTypeSerialiser.InitializeStub">
            <summary>Initializes a new instance of type StubXmlTypeSerialiser</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlTypeSerialiser.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlTypeSerialiser.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Fakes.StubXmlTypeSerialiser.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator">
            <summary>Shim type of Exortech.NetReflector.Generators.XmlDocumentationGenerator</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.#ctor(Exortech.NetReflector.Generators.XmlDocumentationGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.ConstructorNetReflectorTypeTable">
            <summary>Sets the shim of XmlDocumentationGenerator.XmlDocumentationGenerator(NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.ConstructorNetReflectorTypeTableXmlMemberDocumentationGenerator">
            <summary>Sets the shim of XmlDocumentationGenerator.XmlDocumentationGenerator(NetReflectorTypeTable table, XmlMemberDocumentationGenerator memberGenerator)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.WriteIfNotNullXmlWriterStringString">
            <summary>Sets the shim of XmlDocumentationGenerator.WriteIfNotNull(XmlWriter writer, String elementName, String output)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.WriteIfNotNullXmlWriterStringType">
            <summary>Sets the shim of XmlDocumentationGenerator.WriteIfNotNull(XmlWriter writer, String elementName, Type type)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.WriteIndentedTextWriter">
            <summary>Sets the shim of XmlDocumentationGenerator.WriteIndented(TextWriter writer)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.WriteTextWriter">
            <summary>Sets the shim of XmlDocumentationGenerator.Write(TextWriter writer)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.WriteTypesXmlWriter">
            <summary>Sets the shim of XmlDocumentationGenerator.WriteTypes(XmlWriter writer)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.WriteXmlWriter">
            <summary>Sets the shim of XmlDocumentationGenerator.Write(XmlWriter writer)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.AllInstances.WriteIndentedTextWriter">
            <summary>Sets the shim of XmlDocumentationGenerator.WriteIndented(TextWriter writer)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.AllInstances.WriteTextWriter">
            <summary>Sets the shim of XmlDocumentationGenerator.Write(TextWriter writer)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.AllInstances.WriteTypesXmlWriter">
            <summary>Sets the shim of XmlDocumentationGenerator.WriteTypes(XmlWriter writer)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlDocumentationGenerator.AllInstances.WriteXmlWriter">
            <summary>Sets the shim of XmlDocumentationGenerator.Write(XmlWriter writer)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.ShimXmlMemberDocumentationGenerator">
            <summary>Shim type of Exortech.NetReflector.Generators.XmlMemberDocumentationGenerator</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXmlMemberDocumentationGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXmlMemberDocumentationGenerator.#ctor(Exortech.NetReflector.Generators.XmlMemberDocumentationGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXmlMemberDocumentationGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXmlMemberDocumentationGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlMemberDocumentationGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlMemberDocumentationGenerator.Constructor">
            <summary>Sets the shim of XmlMemberDocumentationGenerator.XmlMemberDocumentationGenerator()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlMemberDocumentationGenerator.WriteXmlWriterIXmlTypeSerialiser">
            <summary>Sets the shim of XmlMemberDocumentationGenerator.Write(XmlWriter writer, IXmlTypeSerialiser typeSerialiser)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.ShimXmlMemberDocumentationGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXmlMemberDocumentationGenerator.AllInstances.WriteXmlWriterIXmlTypeSerialiser">
            <summary>Sets the shim of XmlMemberDocumentationGenerator.Write(XmlWriter writer, IXmlTypeSerialiser typeSerialiser)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator">
            <summary>Shim type of Exortech.NetReflector.Generators.XsdGenerator</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.#ctor(Exortech.NetReflector.Generators.XsdGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AddDocumentationStringXmlSchemaElement">
            <summary>Sets the shim of XsdGenerator.AddDocumentation(String description, XmlSchemaElement item)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.ConstructorNetReflectorTypeTable">
            <summary>Sets the shim of XsdGenerator.XsdGenerator(NetReflectorTypeTable table)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.FindBaseTypesIXmlTypeSerialiser">
            <summary>Sets the shim of XsdGenerator.FindBaseTypes(IXmlTypeSerialiser serialiser)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.GenerateBaseXmlSchemaType">
            <summary>Sets the shim of XsdGenerator.GenerateBase(XmlSchema schema, Type baseType)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.GenerateBoolean">
            <summary>Sets the shim of XsdGenerator.Generate(Boolean generateElements)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.GenerateComplexTypeXmlSchemaIXmlTypeSerialiser">
            <summary>Sets the shim of XsdGenerator.GenerateComplexType(XmlSchema schema, IXmlTypeSerialiser serialiser)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.GenerateElementTypeTypeXmlSchemaElementBoolean">
            <summary>Sets the shim of XsdGenerator.GenerateElementType(Type itemType, XmlSchemaElement item, Boolean isAny)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.GenerateEnumXmlSchemaType">
            <summary>Sets the shim of XsdGenerator.GenerateEnum(XmlSchema schema, Type enumType)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.GenerateItemNameType">
            <summary>Sets the shim of XsdGenerator.GenerateItemName(Type value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.GenerateSchemaElementForTypeXmlSchemaIXmlTypeSerialiser">
            <summary>Sets the shim of XsdGenerator.GenerateSchemaElementForType(XmlSchema schema, IXmlTypeSerialiser serialiser)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.GenerateSchemaElementsForMembersIXmlTypeSerialiser">
            <summary>Sets the shim of XsdGenerator.GenerateSchemaElementsForMembers(IXmlTypeSerialiser typeSerialiser)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.InitialiseSchema">
            <summary>Sets the shim of XsdGenerator.InitialiseSchema()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.NamespaceUriGet">
            <summary>Sets the shim of XsdGenerator.get_NamespaceUri()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.NamespaceUriSetString">
            <summary>Sets the shim of XsdGenerator.set_NamespaceUri(String value)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.FindBaseTypesIXmlTypeSerialiser">
            <summary>Sets the shim of XsdGenerator.FindBaseTypes(IXmlTypeSerialiser serialiser)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.GenerateBaseXmlSchemaType">
            <summary>Sets the shim of XsdGenerator.GenerateBase(XmlSchema schema, Type baseType)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.GenerateBoolean">
            <summary>Sets the shim of XsdGenerator.Generate(Boolean generateElements)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.GenerateComplexTypeXmlSchemaIXmlTypeSerialiser">
            <summary>Sets the shim of XsdGenerator.GenerateComplexType(XmlSchema schema, IXmlTypeSerialiser serialiser)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.GenerateElementTypeTypeXmlSchemaElementBoolean">
            <summary>Sets the shim of XsdGenerator.GenerateElementType(Type itemType, XmlSchemaElement item, Boolean isAny)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.GenerateEnumXmlSchemaType">
            <summary>Sets the shim of XsdGenerator.GenerateEnum(XmlSchema schema, Type enumType)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.GenerateItemNameType">
            <summary>Sets the shim of XsdGenerator.GenerateItemName(Type value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.GenerateSchemaElementForTypeXmlSchemaIXmlTypeSerialiser">
            <summary>Sets the shim of XsdGenerator.GenerateSchemaElementForType(XmlSchema schema, IXmlTypeSerialiser serialiser)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.GenerateSchemaElementsForMembersIXmlTypeSerialiser">
            <summary>Sets the shim of XsdGenerator.GenerateSchemaElementsForMembers(IXmlTypeSerialiser typeSerialiser)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.InitialiseSchema">
            <summary>Sets the shim of XsdGenerator.InitialiseSchema()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.NamespaceUriGet">
            <summary>Sets the shim of XsdGenerator.get_NamespaceUri()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdGenerator.AllInstances.NamespaceUriSetString">
            <summary>Sets the shim of XsdGenerator.set_NamespaceUri(String value)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes">
            <summary>Shim type of Exortech.NetReflector.Generators.XsdTypes</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes.#ctor(Exortech.NetReflector.Generators.XsdTypes)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes.Constructor">
            <summary>Sets the shim of XsdTypes.XsdTypes()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes.ConvertToSchemaTypeNameType">
            <summary>Sets the shim of XsdTypes.ConvertToSchemaTypeName(Type type)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes.ItemGetType">
            <summary>Sets the shim of XsdTypes.get_Item(Type type)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes.AllInstances.ConvertToSchemaTypeNameType">
            <summary>Sets the shim of XsdTypes.ConvertToSchemaTypeName(Type type)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.ShimXsdTypes.AllInstances.ItemGetType">
            <summary>Sets the shim of XsdTypes.get_Item(Type type)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.StubXmlDocumentationGenerator">
            <summary>Stub type of Exortech.NetReflector.Generators.XmlDocumentationGenerator</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.StubXmlDocumentationGenerator.#ctor(Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.StubXmlDocumentationGenerator.#ctor(Exortech.NetReflector.NetReflectorTypeTable,Exortech.NetReflector.Generators.XmlMemberDocumentationGenerator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.StubXmlDocumentationGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubXmlDocumentationGenerator</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXmlDocumentationGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXmlDocumentationGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXmlDocumentationGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.StubXmlMemberDocumentationGenerator">
            <summary>Stub type of Exortech.NetReflector.Generators.XmlMemberDocumentationGenerator</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.StubXmlMemberDocumentationGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.StubXmlMemberDocumentationGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubXmlMemberDocumentationGenerator</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.StubXmlMemberDocumentationGenerator.Write(System.Xml.XmlWriter,Exortech.NetReflector.IXmlTypeSerialiser)">
            <summary>Sets the stub of XmlMemberDocumentationGenerator.Write(XmlWriter writer, IXmlTypeSerialiser typeSerialiser)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Generators.Fakes.StubXmlMemberDocumentationGenerator.WriteXmlWriterIXmlTypeSerialiser">
            <summary>Sets the stub of XmlMemberDocumentationGenerator.Write(XmlWriter writer, IXmlTypeSerialiser typeSerialiser)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXmlMemberDocumentationGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXmlMemberDocumentationGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXmlMemberDocumentationGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.StubXsdGenerator">
            <summary>Stub type of Exortech.NetReflector.Generators.XsdGenerator</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.StubXsdGenerator.#ctor(Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.StubXsdGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubXsdGenerator</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXsdGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXsdGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXsdGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Generators.Fakes.StubXsdTypes">
            <summary>Stub type of Exortech.NetReflector.Generators.XsdTypes</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.StubXsdTypes.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Generators.Fakes.StubXsdTypes.InitializeStub">
            <summary>Initializes a new instance of type StubXsdTypes</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXsdTypes.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXsdTypes.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Generators.Fakes.StubXsdTypes.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimDefaultInstantiator">
            <summary>Shim type of Exortech.NetReflector.Util.DefaultInstantiator</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimDefaultInstantiator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimDefaultInstantiator.#ctor(Exortech.NetReflector.Util.DefaultInstantiator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimDefaultInstantiator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimDefaultInstantiator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimDefaultInstantiator.Bind(Exortech.NetReflector.Util.IInstantiator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimDefaultInstantiator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimDefaultInstantiator.Constructor">
            <summary>Sets the shim of DefaultInstantiator.DefaultInstantiator()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimDefaultInstantiator.InstantiateType">
            <summary>Sets the shim of DefaultInstantiator.Instantiate(Type type)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimDefaultInstantiator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimDefaultInstantiator.AllInstances.InstantiateType">
            <summary>Sets the shim of DefaultInstantiator.Instantiate(Type type)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimReflectionUtil">
            <summary>Shim type of Exortech.NetReflector.Util.ReflectionUtil</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimReflectionUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimReflectionUtil.#ctor(Exortech.NetReflector.Util.ReflectionUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimReflectionUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimReflectionUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectionUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectionUtil.Constructor">
            <summary>Sets the shim of ReflectionUtil.ReflectionUtil()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectionUtil.IsCommonTypeType">
            <summary>Sets the shim of ReflectionUtil.IsCommonType(Type t)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimReflectionUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimReflectorMember">
            <summary>Shim type of Exortech.NetReflector.Util.ReflectorMember</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.#ctor(Exortech.NetReflector.Util.ReflectorMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.Constructor">
            <summary>Sets the shim of ReflectorMember.ReflectorMember()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.ConvertToMemberTypeObject">
            <summary>Sets the shim of ReflectorMember.ConvertToMemberType(Object value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.CreateMemberInfo">
            <summary>Sets the shim of ReflectorMember.Create(MemberInfo memberInfo)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.MemberNameGet">
            <summary>Sets the shim of ReflectorMember.get_MemberName()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.NameGet">
            <summary>Sets the shim of ReflectorMember.get_Name()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.AllInstances.ConvertToMemberTypeObject">
            <summary>Sets the shim of ReflectorMember.ConvertToMemberType(Object value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.AllInstances.MemberNameGet">
            <summary>Sets the shim of ReflectorMember.get_MemberName()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorMember.AllInstances.NameGet">
            <summary>Sets the shim of ReflectorMember.get_Name()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter">
            <summary>Shim type of Exortech.NetReflector.Util.ReflectorTypeConverter</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter.#ctor(Exortech.NetReflector.Util.ReflectorTypeConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter.Constructor">
            <summary>Sets the shim of ReflectorTypeConverter.ReflectorTypeConverter()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter.ConvertTypeObject">
            <summary>Sets the shim of ReflectorTypeConverter.Convert(Type to, Object from)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter.IsCompatibleTypeTypeObject">
            <summary>Sets the shim of ReflectorTypeConverter.IsCompatibleType(Type to, Object from)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter.AllInstances.ConvertTypeObject">
            <summary>Sets the shim of ReflectorTypeConverter.Convert(Type to, Object from)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimReflectorTypeConverter.AllInstances.IsCompatibleTypeTypeObject">
            <summary>Sets the shim of ReflectorTypeConverter.IsCompatibleType(Type to, Object from)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimStringUtil">
            <summary>Shim type of Exortech.NetReflector.Util.StringUtil</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimStringUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimStringUtil.#ctor(Exortech.NetReflector.Util.StringUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimStringUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimStringUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimStringUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimStringUtil.Constructor">
            <summary>Sets the shim of StringUtil.StringUtil()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimStringUtil.EqualsIgnoreCaseStringString">
            <summary>Sets the shim of StringUtil.EqualsIgnoreCase(String a, String b)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimStringUtil.FormatStringObjectArray">
            <summary>Sets the shim of StringUtil.Format(String format, Object[] args)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimStringUtil.JoinStringObjectArray">
            <summary>Sets the shim of StringUtil.Join(String separator, Object[] objects)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimStringUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimXmlElementList">
            <summary>Shim type of Exortech.NetReflector.Util.XmlElementList</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.#ctor(Exortech.NetReflector.Util.XmlElementList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.ConstructorXmlNodeList">
            <summary>Sets the shim of XmlElementList.XmlElementList(XmlNodeList nodes)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.CountGet">
            <summary>Sets the shim of XmlElementList.get_Count()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.CreateXmlNodeList">
            <summary>Sets the shim of XmlElementList.Create(XmlNodeList nodes)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.FillListXmlNodeList">
            <summary>Sets the shim of XmlElementList.FillList(XmlNodeList nodes)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.GetEnumerator">
            <summary>Sets the shim of XmlElementList.GetEnumerator()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.ItemInt32">
            <summary>Sets the shim of XmlElementList.Item(Int32 index)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.AllInstances.CountGet">
            <summary>Sets the shim of XmlElementList.get_Count()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.AllInstances.FillListXmlNodeList">
            <summary>Sets the shim of XmlElementList.FillList(XmlNodeList nodes)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.AllInstances.GetEnumerator">
            <summary>Sets the shim of XmlElementList.GetEnumerator()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlElementList.AllInstances.ItemInt32">
            <summary>Sets the shim of XmlElementList.Item(Int32 index)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimXmlUtil">
            <summary>Shim type of Exortech.NetReflector.Util.XmlUtil</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimXmlUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimXmlUtil.#ctor(Exortech.NetReflector.Util.XmlUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimXmlUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.ShimXmlUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlUtil.Constructor">
            <summary>Sets the shim of XmlUtil.XmlUtil()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlUtil.GetChildNodeXmlNodeString">
            <summary>Sets the shim of XmlUtil.GetChildNode(XmlNode node, String name)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlUtil.ReadNodeString">
            <summary>Sets the shim of XmlUtil.ReadNode(String xml)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.ShimXmlUtil.ReadNodeXmlReader">
            <summary>Sets the shim of XmlUtil.ReadNode(XmlReader reader)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.ShimXmlUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.StubDefaultInstantiator">
            <summary>Stub type of Exortech.NetReflector.Util.DefaultInstantiator</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubDefaultInstantiator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubDefaultInstantiator.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultInstantiator</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubDefaultInstantiator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubDefaultInstantiator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubDefaultInstantiator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.StubIInstantiator">
            <summary>Stub type of Exortech.NetReflector.Util.IInstantiator</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubIInstantiator.#ctor">
            <summary>Initializes a new instance of type StubIInstantiator</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubIInstantiator.nr::Exortech#NetReflector#Util#IInstantiator#Instantiate(System.Type)">
            <summary>Sets the stub of IInstantiator.Instantiate(Type type)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Util.Fakes.StubIInstantiator.InstantiateType">
            <summary>Sets the stub of IInstantiator.Instantiate(Type type)</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.StubReflectorMember">
            <summary>Stub type of Exortech.NetReflector.Util.ReflectorMember</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubReflectorMember.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubReflectorMember.GetValue(System.Object)">
            <summary>Sets the stub of ReflectorMember.GetValue(Object instance)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Util.Fakes.StubReflectorMember.GetValueObject">
            <summary>Sets the stub of ReflectorMember.GetValue(Object instance)</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubReflectorMember.InitializeStub">
            <summary>Initializes a new instance of type StubReflectorMember</summary>
        </member>
        <member name="F:Exortech.NetReflector.Util.Fakes.StubReflectorMember.MemberInfoGet">
            <summary>Sets the stub of ReflectorMember.get_MemberInfo()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Util.Fakes.StubReflectorMember.MemberTypeGet">
            <summary>Sets the stub of ReflectorMember.get_MemberType()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubReflectorMember.SetValue(System.Object,System.Object)">
            <summary>Sets the stub of ReflectorMember.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Util.Fakes.StubReflectorMember.SetValueObjectObject">
            <summary>Sets the stub of ReflectorMember.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubReflectorMember.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubReflectorMember.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubReflectorMember.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubReflectorMember.MemberInfo">
            <summary>Sets the stub of ReflectorMember.get_MemberInfo()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubReflectorMember.MemberType">
            <summary>Sets the stub of ReflectorMember.get_MemberType()</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.StubReflectorTypeConverter">
            <summary>Stub type of Exortech.NetReflector.Util.ReflectorTypeConverter</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubReflectorTypeConverter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubReflectorTypeConverter.InitializeStub">
            <summary>Initializes a new instance of type StubReflectorTypeConverter</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubReflectorTypeConverter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubReflectorTypeConverter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubReflectorTypeConverter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.StubXmlElementList">
            <summary>Stub type of Exortech.NetReflector.Util.XmlElementList</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubXmlElementList.#ctor(System.Xml.XmlNodeList)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Exortech.NetReflector.Util.Fakes.StubXmlElementList.CountGet">
            <summary>Sets the stub of XmlElementList.get_Count()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubXmlElementList.GetEnumerator">
            <summary>Sets the stub of XmlElementList.GetEnumerator()</summary>
        </member>
        <member name="F:Exortech.NetReflector.Util.Fakes.StubXmlElementList.GetEnumerator01">
            <summary>Sets the stub of XmlElementList.GetEnumerator()</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubXmlElementList.InitializeStub">
            <summary>Initializes a new instance of type StubXmlElementList</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubXmlElementList.Item(System.Int32)">
            <summary>Sets the stub of XmlElementList.Item(Int32 index)</summary>
        </member>
        <member name="F:Exortech.NetReflector.Util.Fakes.StubXmlElementList.ItemInt32">
            <summary>Sets the stub of XmlElementList.Item(Int32 index)</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubXmlElementList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubXmlElementList.Count">
            <summary>Sets the stub of XmlElementList.get_Count()</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubXmlElementList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubXmlElementList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Exortech.NetReflector.Util.Fakes.StubXmlUtil">
            <summary>Stub type of Exortech.NetReflector.Util.XmlUtil</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubXmlUtil.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Exortech.NetReflector.Util.Fakes.StubXmlUtil.InitializeStub">
            <summary>Initializes a new instance of type StubXmlUtil</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubXmlUtil.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubXmlUtil.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Exortech.NetReflector.Util.Fakes.StubXmlUtil.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
